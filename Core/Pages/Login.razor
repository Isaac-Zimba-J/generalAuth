@page "/login"
@using Shared
@inject NavigationManager NavigationManager
@inject AuthService AuthService

<div style="width: 300px; margin: 100px auto; padding: 20px; border: 1px solid #ccc; border-radius: 5px; background-color: #f9f9f9;">
    <h3 style="text-align: center;">Login</h3>
    <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div style="margin-bottom: 15px;">
            <label for="username" style="display: block; font-weight: bold;">Username:</label>
            <input id="username" type="text" @bind="loginModel.UserName" style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;" />
        </div>

        <div style="margin-bottom: 15px;">
            <label for="password" style="display: block; font-weight: bold;">Password:</label>
            <input id="password" type="password" @bind="loginModel.Password" style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;" />
        </div>

        <div style="text-align: center;">
            <button type="submit" style="padding: 10px 20px; background-color: #007bff; color: #fff; border: none; border-radius: 4px; cursor: pointer;">
                Login
            </button>
        </div>
    </EditForm>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div style="margin-top: 15px; color: red; text-align: center;">@errorMessage</div>
    }
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    public class LoginModel
    {
        public string UserName { get; set; }
        public string Password { get; set; }
    }

    private async Task HandleLogin()
    {
        try
        {
            var response = await AuthService.LoginAsync(loginModel.UserName, loginModel.Password);
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Login failed. Please check your username and password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
